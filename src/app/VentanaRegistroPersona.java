/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package app;

import conexion.EstablecerConexionDB;
import javax.swing.*;
import java.sql.*;
import javax.sound.sampled.*;
import sonido.Sonidos;

/**
 *
 * @author shiba
 */
public class VentanaRegistroPersona extends JFrame implements Sonidos{

    /**
     * Creates new form VentanaInicio
     */
    public VentanaRegistroPersona() {
        initComponents();
        setTitle("Microsoft Software");
        setResizable(false);
        setLocationRelativeTo(null);
        tipo.setVisible(false);
        campoTipo.setVisible(false);
        campoSalario.setVisible(false);
        jLabel4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        comentarios = new javax.swing.JLabel();
        sexo = new javax.swing.JLabel();
        tipo = new javax.swing.JLabel();
        campoTipo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        botonRegistrar = new javax.swing.JButton();
        campoSalario = new javax.swing.JTextField();
        volver = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jComboBox1 = new javax.swing.JComboBox<>();
        hombre = new javax.swing.JRadioButton();
        mujer = new javax.swing.JRadioButton();
        noBinario = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        campoComentarios = new javax.swing.JTextArea();
        termino = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        buttonGroup1.add(hombre);
        buttonGroup1.add(mujer);
        buttonGroup1.add(noBinario);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        comentarios.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        comentarios.setForeground(new java.awt.Color(255, 255, 255));
        comentarios.setText("COMENTARIOS");
        jPanel2.add(comentarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, -1, -1));

        sexo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        sexo.setForeground(new java.awt.Color(255, 255, 255));
        sexo.setText("SEXO");
        jPanel2.add(sexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        tipo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tipo.setForeground(new java.awt.Color(255, 255, 255));
        tipo.setText("Elecci√≥n");
        jPanel2.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        campoTipo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        campoTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTipoActionPerformed(evt);
            }
        });
        jPanel2.add(campoTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 190, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("SALARIO");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, -1));

        botonRegistrar.setBackground(new java.awt.Color(0, 0, 255));
        botonRegistrar.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        botonRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        botonRegistrar.setText("REGISTRAR");
        botonRegistrar.setFocusable(false);
        botonRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRegistrarActionPerformed(evt);
            }
        });
        jPanel2.add(botonRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 640, 160, 50));

        campoSalario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        campoSalario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoSalarioActionPerformed(evt);
            }
        });
        jPanel2.add(campoSalario, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 190, 40));

        volver.setBackground(new java.awt.Color(0, 0, 255));
        volver.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        volver.setForeground(new java.awt.Color(255, 255, 255));
        volver.setText("VOLVER");
        volver.setFocusable(false);
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });
        jPanel2.add(volver, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 640, 130, 50));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NOMBRE");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, -1));

        campoNombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        campoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoNombreActionPerformed(evt);
            }
        });
        jPanel2.add(campoNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 190, 40));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 630, 470, 10));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin seleccionar","Dept.Ventas","Dept.Servicio","Cliente" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        jPanel2.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 230, 30));

        hombre.setBackground(new java.awt.Color(51, 51, 51));
        hombre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        hombre.setForeground(new java.awt.Color(255, 255, 255));
        hombre.setSelected(true);
        hombre.setText("Hombre");
        jPanel2.add(hombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 290, -1, 40));

        mujer.setBackground(new java.awt.Color(51, 51, 51));
        mujer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mujer.setForeground(new java.awt.Color(255, 255, 255));
        mujer.setText("Mujer");
        jPanel2.add(mujer, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, -1, 40));

        noBinario.setBackground(new java.awt.Color(51, 51, 51));
        noBinario.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        noBinario.setForeground(new java.awt.Color(255, 255, 255));
        noBinario.setText("No binario");
        noBinario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noBinarioActionPerformed(evt);
            }
        });
        jPanel2.add(noBinario, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 290, -1, 40));

        campoComentarios.setColumns(20);
        campoComentarios.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        campoComentarios.setRows(5);
        jScrollPane1.setViewportView(campoComentarios);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 430, 180));

        termino.setBackground(new java.awt.Color(51, 51, 51));
        termino.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        termino.setForeground(new java.awt.Color(255, 255, 255));
        termino.setText("Acepta que todos los datos son correctos y reales.");
        jPanel2.add(termino, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 470, 710));

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MICROSOFT SYSTEM");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/microsoft.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 110));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        VentanaPrincipal vP = new VentanaPrincipal();
        reproducirSonido("disparo.wav");
        this.dispose();
        vP.setVisible(true);
    }//GEN-LAST:event_volverActionPerformed

    private void botonRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRegistrarActionPerformed
        String sexoElegido = "";
        Connection cn = EstablecerConexionDB.conectar();
        reproducirSonido("disparo.wav");
        int venta = 0;
        String servicio = "";
        String DNI = "";
        if (campoNombre.getText().length() < 2 || campoNombre.getText().length() > 25) {
            JOptionPane.showMessageDialog(null, "Debe contener como m√°ximo 25 caracteres y 2 como m√≠nimo", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        }else if (jComboBox1.getSelectedItem().toString().equals("Sin seleccionar")) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una opci√≥n.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        } else if (!termino.isSelected()) {
            JOptionPane.showMessageDialog(null, "Debe aceptar el termino.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
        } else {
            if (hombre.isSelected()) {
                sexoElegido = "Hombre";
            } else if (mujer.isSelected()) {
                sexoElegido = "Mujer";
            } else if (noBinario.isSelected()) {
                sexoElegido = "No binario";
            }

            switch (jComboBox1.getSelectedItem().toString()) {
                case "Dept.Ventas":
                    campoTipo.setText(campoTipo.getText().trim());
                    try {
                        venta = Integer.parseInt(campoTipo.getText());
                        if (venta < 0) {
                            JOptionPane.showMessageDialog(null, "Las ventas son n√∫meros enteros no negativos.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                            campoTipo.setText("0");
                        } else {
                            try {
                                PreparedStatement insertarVentas = cn.prepareStatement("INSERT INTO REPVENTAS(VENTAS,SALARIO)VALUES(?,?)");
                                insertarVentas.setInt(1, venta);
                                insertarVentas.setDouble(2, Double.parseDouble(campoSalario.getText().replace(',', '.').trim()));
                                insertarVentas.executeUpdate();
                                PreparedStatement buscarVenta = cn.prepareStatement("SELECT ID FROM REPVENTAS ORDER BY ID DESC LIMIT 1");
                                ResultSet rs = buscarVenta.executeQuery();
                                int idVenta = 0;
                                if (rs.next()) {
                                    idVenta = rs.getInt(1);
                                }
                                PreparedStatement insertarPersonaVentas = cn.prepareStatement("INSERT INTO PERSONAS(NOMBRE,TIPO,SEXO,COMENTARIOS,ID_VENTAS)VALUES(?,?,?,?,?)");
                                insertarPersonaVentas.setString(1, campoNombre.getText());
                                insertarPersonaVentas.setString(2, "Dept.Ventas");
                                insertarPersonaVentas.setString(3, sexoElegido);
                                if (campoComentarios.getText().length() == 0) {
                                    campoComentarios.setText("Sin comentarios");
                                }
                                insertarPersonaVentas.setString(4, campoComentarios.getText());
                                insertarPersonaVentas.setInt(5, idVenta);
                                insertarPersonaVentas.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Se inserto correctamente su personal de ventas.", "Mensaje de informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                                VentanaPrincipal vP = new VentanaPrincipal();
                                this.dispose();
                                vP.setVisible(true);
                                cn.close();
                            } catch (SQLException e) {
                                System.err.println("Error al insertar: " + e);
                            }
                        }
                    } catch (NumberFormatException e) {
                        JOptionPane.showMessageDialog(null, "Las ventas son n√∫meros enteros no negativos.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                        System.err.println(e);
                    }
                    break;
                case "Dept.Servicio":
                    servicio = campoTipo.getText().trim();
                    if (servicio.length() == 0) {
                        JOptionPane.showMessageDialog(null, "Introduzca un servicio.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        try {
                            PreparedStatement insertarServicios = cn.prepareStatement("INSERT INTO REPSERVICIOS(SERVICIO,SALARIO)VALUES(?,?)");
                            insertarServicios.setString(1, servicio);
                            insertarServicios.setDouble(2, Double.parseDouble(campoSalario.getText().replace(',', '.').trim()));
                            insertarServicios.executeUpdate();
                            PreparedStatement buscarServicio = cn.prepareStatement("SELECT ID FROM REPSERVICIOS ORDER BY ID DESC LIMIT 1");
                            ResultSet rs = buscarServicio.executeQuery();
                            int idServicio = 0;
                            if (rs.next()) {
                                idServicio = rs.getInt(1);
                            }
                            PreparedStatement insertarPersonaVentas = cn.prepareStatement("INSERT INTO PERSONAS(NOMBRE,TIPO,SEXO,COMENTARIOS,ID_SERVICIO)VALUES(?,?,?,?,?)");
                            insertarPersonaVentas.setString(1, campoNombre.getText());
                            insertarPersonaVentas.setString(2, "Dept.Servicio");
                            insertarPersonaVentas.setString(3, sexoElegido);
                            if (campoComentarios.getText().length() == 0) {
                                campoComentarios.setText("Sin comentarios");
                            }
                            insertarPersonaVentas.setString(4, campoComentarios.getText());
                            insertarPersonaVentas.setInt(5, idServicio);
                            insertarPersonaVentas.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Se inserto correctamente su personal de servicios.", "Mensaje de informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                            VentanaPrincipal vP = new VentanaPrincipal();
                            this.dispose();
                            vP.setVisible(true);
                            cn.close();
                        } catch (SQLException e) {
                            System.err.println("Error al insertar: " + e);
                        }
                    }
                    break;
                case "Cliente":
                    DNI = campoTipo.getText().trim();
                    if (DNI.length() != 9) {
                        JOptionPane.showMessageDialog(null, "El DNI no es v√°lido.", "Mensaje de error", JOptionPane.ERROR_MESSAGE);
                    } else {
                        try {
                            PreparedStatement insertarCliente = cn.prepareStatement("INSERT INTO CLIENTES(DNI)VALUES(?)");
                            insertarCliente.setString(1, DNI);
                            insertarCliente.executeUpdate();
                            PreparedStatement buscarCliente = cn.prepareStatement("SELECT ID FROM CLIENTES ORDER BY ID DESC LIMIT 1");
                            ResultSet rs = buscarCliente.executeQuery();
                            int idCliente = 0;
                            if (rs.next()) {
                                idCliente = rs.getInt(1);
                            }
                            PreparedStatement insertarPersonaVentas = cn.prepareStatement("INSERT INTO PERSONAS(NOMBRE,TIPO,SEXO,COMENTARIOS,ID_CLIENTE)VALUES(?,?,?,?,?)");
                            insertarPersonaVentas.setString(1, campoNombre.getText());
                            insertarPersonaVentas.setString(2, "Cliente");
                            insertarPersonaVentas.setString(3, sexoElegido);
                            if (campoComentarios.getText().length() == 0) {
                                campoComentarios.setText("Sin comentarios");
                            }
                            insertarPersonaVentas.setString(4, campoComentarios.getText());
                            insertarPersonaVentas.setInt(5, idCliente);
                            insertarPersonaVentas.executeUpdate();
                            JOptionPane.showMessageDialog(null, "Se inserto correctamente el cliente.", "Mensaje de informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
                            VentanaPrincipal vP = new VentanaPrincipal();
                            this.dispose();
                            vP.setVisible(true);
                            cn.close();
                        } catch (SQLException e) {
                            System.err.println("Error al insertar: " + e);
                        }
                    }
                    break;
            }
        }

    }//GEN-LAST:event_botonRegistrarActionPerformed

    private void campoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoNombreActionPerformed

    private void campoSalarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoSalarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoSalarioActionPerformed

    private void campoTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campoTipoActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if (jComboBox1.getSelectedItem().toString().equals("Sin seleccionar")) {
            tipo.setVisible(false);
            campoTipo.setVisible(false);
            campoSalario.setVisible(false);
            jLabel4.setVisible(false);
        } else if (jComboBox1.getSelectedItem().toString().equals("Dept.Ventas")) {
            tipo.setText("VENTAS");
            tipo.setVisible(true);
            campoTipo.setVisible(true);
            campoSalario.setVisible(true);
            jLabel4.setVisible(true);
        } else if (jComboBox1.getSelectedItem().toString().equals("Dept.Servicio")) {
            tipo.setText("SERVICIO");
            tipo.setVisible(true);
            campoTipo.setVisible(true);
            campoSalario.setVisible(true);
            jLabel4.setVisible(true);
        } else if (jComboBox1.getSelectedItem().toString().equals("Cliente")) {
            tipo.setText("DNI");
            tipo.setVisible(true);
            campoTipo.setVisible(true);
            campoSalario.setVisible(false);
            jLabel4.setVisible(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void noBinarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noBinarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_noBinarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroPersona.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroPersona.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroPersona.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaRegistroPersona.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaRegistroPersona().setVisible(true);
            }
        });
    }
    @Override
    public void reproducirSonido(String sonido) {
        try {
            AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(VentanaInicio.class.getResourceAsStream("/sonido/" + sonido));
            Clip clip = AudioSystem.getClip();
            clip.open(audioInputStream);
            clip.start();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonRegistrar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextArea campoComentarios;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoSalario;
    private javax.swing.JTextField campoTipo;
    private javax.swing.JLabel comentarios;
    private javax.swing.JRadioButton hombre;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JRadioButton mujer;
    private javax.swing.JRadioButton noBinario;
    private javax.swing.JLabel sexo;
    private javax.swing.JCheckBox termino;
    private javax.swing.JLabel tipo;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
